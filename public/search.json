[{"content":"","description":"Description goes here...","tags":[""],"title":"ArticleName","uri":"/en/post/2024/articlename/"},{"content":" Introduction As a beginner to Hugo, one of the first things you’ll want to do is create a custom theme for your blog. A custom theme allows you to personalize the look and feel of your website, making it unique and reflective of your brand.\nIn this tutorial, we’ll guide you through the process of setting up a custom theme for your Hugo blog.\nStep 1: Create a New Theme Open your terminal or command prompt and navigate to your Hugo project directory. Run the following command to create a new theme: ","description":"This is a youtube test blog","tags":["markdown","tutorial","hugo","blog"],"title":"Youtube Test","uri":"/en/post/2024/youtube-test/"},{"content":"这期节目在抖音已经突破60万的播放量，我们让AI谈论推荐算法与信息茧房的问题。\nThis episode on Douyin has over 600,000 views, featuring an AI discussing recommendation algorithms and information bubbles.#aiart #aitalk pic.twitter.com/xmTni5YKBx\n— 汗青 HQ (@hq4ai) November 10, 2024 Twitter url: https://x.com/hanqing_me/status/1855555630121238942\n引言 随着人工智能的迅速发展及其在各大社交媒体平台的应用，关于推荐算法和信息茧房的讨论日益增多。最近，在抖音上播放的一集节目中，AI探讨了这些算法对信息消费的影响，节目播放量超过60万次，引发了广泛关注。\n节目在抖音上的受欢迎度 这集节目在抖音上的高播放量表明，中国观众对推荐算法如何影响他们看到的内容有着浓厚的兴趣。这种高关注度反映出人们对算法偏见及其潜在信息多样性影响的意识正在逐渐提升。\nAI在节目的角色 在本期节目中，AI扮演了核心角色，可能是作为主持人、辩论者，或是信息提供者。让AI主导讨论这样的复杂话题，展示了一种新颖的方式，可能会影响观众的观看体验和互动方式。\n标签与潜在受众 节目使用了#aiart和#aitalk等标签，暗示目标观众对AI、艺术和传播的交叉领域感兴趣。在这些特定标签下讨论推荐算法问题，吸引了那些不仅对技术感兴趣，也关注AI对社会影响的观众。\n节目结构与AI的观点 这期抖音节目采用了展示和纪录片风格的形式，AI详细阐述了推荐算法的工作原理及其对用户的影响。AI指出，算法会影响用户接触到的内容，从而潜移默化地塑造他们的观点，甚至可能导致信息茧房的产生。\n信息茧房：定义与问题 节目深入探讨了“信息茧房”这一概念，即用户接触的内容往往与其已有的观念相符，可能限制了他们接触多样化视角的机会。这种效应引发了对观点极化和偏见强化的担忧。\n中国背景下的相关性 虽然信息茧房和推荐算法是普遍现象，但该节目引入了一些中国数字环境中的具体例子，帮助观众理解推荐算法对他们日常信息获取的直接影响。\n可能的解决方案与缓解措施 节目还探讨了可能的解决方案，如算法透明度和增加用户对内容推荐的控制。这些建议与AI负责任使用和算法伦理设计的更广泛呼声相一致。\n观众反应与关键见解 观众评论呈现出支持与质疑并存的态度，有些观众称赞AI的见解，有些则质疑解决方案的可行性。总体而言，高互动度表明公众对理解AI在数字体验中作用的强烈兴趣。\n结论 这集抖音节目展示了AI在教育和引发复杂社会议题讨论方面的潜力。随着AI继续影响我们的数字体验，理解其在推荐算法和信息茧房方面的作用变得至关重要。\n您对AI在社交媒体上的角色有何看法？欢迎在下方评论区分享您的观点！\n","description":"探索AI如何在抖音上讨论推荐算法和信息茧房的影响，了解算法偏见和信息获取的潜在影响。","tags":["AI","推荐算法","信息茧房","抖音","社会媒体"],"title":"AI谈论推荐算法与信息茧房的问题","uri":"/en/post/2024/ai%E8%B0%88%E8%AE%BA%E6%8E%A8%E8%8D%90%E7%AE%97%E6%B3%95%E4%B8%8E%E4%BF%A1%E6%81%AF%E8%8C%A7%E6%88%BF%E7%9A%84%E9%97%AE%E9%A2%98/"},{"content":"A Beginner’s Guide to Hugo Shortcodes What are Hugo Shortcodes? Hugo shortcodes are special templates that let you easily add rich content to your website without writing complex HTML code. Think of them as simple shortcuts for inserting things like videos, tweets, and other media into your pages.\nUnderstanding Built-in Shortcodes Basic Syntax Shortcodes in Hugo use this format: Copy{{% shortcode-name parameters %}} # for markdown content {{\u003c shortcode-name parameters \u003e}} # for HTML content YouTube Videos\nHow to Embed YouTube Videos Let’s break down the process step by step:\nStart with a YouTube URL:\nhttps://www.youtube.com/watch?v=3qHkcs3kG44 Find the Video ID:\nLook for the part after v= in the URL In this example: 3qHkcs3kG44 Use the Shortcode:\n{{\u003c youtube 3qHkcs3kG44 \u003e}} What This Does:\nCreates a responsive video player Enhances privacy (uses YouTube’s privacy-enhanced mode) Works on all screen sizes Loads faster than embedding raw HTML Twitter Embeds How to Embed Tweets Step-by-step process:\nGet the Tweet URL:\nhttps://twitter.com/binovarghese_/status/1758148486510317907 Extract Key Information:\nUsername: binovarghese_ Tweet ID: 1758148486510317907 Use the Twitter Shortcode:\n{{\u003c twitter user=\"binovarghese_\" id=\"1758148486510317907\" \u003e}} I’m a night owl who loves the dark hours. I often go for walks at night, enjoying the city lights, the yellow glow, and the people around me.\nHere are some photos I took from the night walks in Bahrain#photography #Bahrainhttps://t.co/OzoJjNRH67\n— Bino⚡ (@binovarghese_) February 15, 2024 What This Does:\nEmbeds the tweet with original formatting Maintains responsiveness Works without JavaScript (static version) Respects user privacy Examples of Other Common Shortcodes Vimeo Videos {{\u003c vimeo 123456789 \u003e}} Instagram Posts {{\u003c instagram BWNjjyYFxVx \u003e}} GitHub Gists {{\u003c gist user hash \u003e}} Best Practices Privacy Considerations\nHugo’s built-in shortcodes are privacy-aware They use no-JS versions when possible They respect user privacy settings Performance Tips\nUse shortcodes instead of raw embeds They load faster and are more efficient They’re automatically responsive Common Mistakes to Avoid\nDon’t forget the closing bracket \u003e}} Make sure to copy the correct video/tweet ID Don’t add extra spaces in the shortcode Troubleshooting Tips Video Not Loading?\nCheck if the video ID is correct Verify the video is public Make sure you’re using the right shortcode format Tweet Not Displaying?\nConfirm the tweet is public Double-check the user and ID Ensure proper formatting of the shortcode Additional Resources Where to Learn More\nHugo Documentation Hugo Forums Community Guides Custom Shortcodes\nYou can create your own shortcodes They use Go templating Can be more advanced for specific needs Remember: Shortcodes are meant to make your life easier. If you’re writing complex HTML to embed content, there’s probably a shortcode that can do it for you!\n","description":"I've created a comprehensive guide that breaks down Hugo shortcodes in a beginner-friendly way. Would you like me to explain any particular section in more detail? I can also show you:","tags":["markdown","tutorial","hugo","blog"],"title":"A Beginner's Guide to Hugo Shortcodes","uri":"/en/post/2024/a-beginners-guide-to-hugo-shortcodes/"},{"content":"Markdown 语法入门指南 目录 Markdown 语法入门指南 目录 标题设置 段落格式 文字样式 粗体文本 斜体文本 粗体和斜体组合 图片插入 实际示例 标题设置 标题使用井号（#）创建。井号的数量决定标题的级别：\n# 一级标题（最大） ## 二级标题 ### 三级标题 #### 四级标题 ##### 五级标题 ###### 六级标题（最小） 重要提示：\n井号后必须加一个空格 标题级别要按顺序使用（不要从一级标题直接跳到四级标题） 每个文档建议只使用一个一级标题 段落格式 在 Markdown 中创建段落非常简单，只需要用空行分隔文本：\n这是第一段文字。 这是第二段文字。 这是第三段文字。 使用建议： 不要用空格或制表符缩进段落。\n文字样式 粗体文本 有两种方式可以将文字设置为粗体：\n**使用双星号** __使用双下划线__ 这个词的**中间部分**是粗体 斜体文本 同样有两种方式可以将文字设置为斜体：\n*使用单星号* _使用单下划线_ 这个词的*中间部分*是斜体 粗体和斜体组合 你可以组合使用两种样式：\n***粗体加斜体*** **_粗体加斜体_** 图片插入 图片使用以下语法：\n![替代文本](图片URL \"可选标题\") 示例：\n![可爱的猫咪](https://example.com/cat.jpg \"我的猫\") 语法解析：\n! - 告诉 Markdown 这是一张图片 [替代文本] - 图片的描述（当图片无法显示时会显示这段文字） (URL) - 图片的网址或文件路径 \"可选标题\" - 鼠标悬停在图片上时显示的文字 实际示例 这是一个综合运用的例子：\n# 我的旅行博客 ## 巴黎之行 上周末，我第一次访问了**巴黎**。*埃菲尔铁塔*真是***太震撼了***！ ![埃菲尔铁塔](https://example.com/eiffel.jpg \"日落时分的巴黎\") ### 游览景点 - 巴黎圣母院 - 卢浮宫 - 凯旋门 真期待下次再来！ 专业建议：\n保持样式一致（选择使用星号或下划线后要一直使用同一种） 使用标题创建清晰的文档结构 始终为图片添加描述性的替代文本 在标题前后留出空行，提高可读性 不要过度使用格式化 - 如果所有内容都是粗体，就没有重点了！ ","description":"我已经创建了一个全面的中文 Markdown 入门指南，包含了所有基础语法的详细说明和示例。你想要我详细解释其中的某个部分吗？我也可以展示这些元素实际渲染后的效果，如果你觉得有帮助的话。","tags":["markdown","tutorial","hugo","blog"],"title":"Markdown 语法入门指南","uri":"/en/post/2024/markdown-%E8%AF%AD%E6%B3%95%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/"},{"content":"A Beginner’s Guide to Markdown Syntax Table of Contents Headings Paragraphs Text Styling Images Examples Headings Headings are created using the hash symbol (#). The number of hashes determines the heading level:\n# Heading 1 (Largest) ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6 (Smallest) Important Tips:\nAlways put a space after the hash symbols Use heading levels in order (don’t skip from H1 to H4) Only use one H1 per document Paragraphs Creating paragraphs in Markdown is simple. Just separate your text with a blank line:\nThis is the first paragraph. This is the second paragraph. This is the third paragraph. Best Practice: Don’t indent paragraphs with spaces or tabs.\nText Styling Bold Text There are two ways to make text bold:\n**Using asterisks** __Using underscores__ This word is **partially** bold Italic Text Similarly, there are two ways to italicize text:\n*Using single asterisks* _Using single underscores_ This word is *partially* italicized Combining Bold and Italic You can combine both styles:\n***Bold and italic*** **_Bold and italic_** Images Images follow this syntax:\n![Alt text](URL \"Optional title\") Example:\n![Cute cat](https://example.com/cat.jpg \"My cat\") Breaking down the parts:\n! - Tells Markdown this is an image [Alt text] - Description of the image (shown if image fails to load) (URL) - The image’s web address or file path \"Optional title\" - Text shown when hovering over the image Examples Here’s everything put together:\n# My Travel Blog ## Trip to Paris Last weekend, I visited **Paris** for the first time. The *Eiffel Tower* was ***amazing***! ![Eiffel Tower](https://example.com/eiffel.jpg \"Paris at sunset\") ### Places I Visited - Notre-Dame Cathedral - The Louvre - Arc de Triomphe I can't wait to visit again! Pro Tips:\nBe consistent with your styling choices (stick to either asterisks or underscores) Use headings to create a clear document structure Always include descriptive alt text for images Leave blank lines before and after headings for better readability Don’t overuse formatting - if everything is bold, nothing stands out! ","description":"I've created a comprehensive guide that covers all the basic Markdown syntax you asked about, with clear examples and best practices. Is there any particular aspect you'd like me to explain in more detail? I can also show you how these elements look when rendered, if that would be helpful.","tags":["markdown","tutorial","hugo","blog"],"title":"A Beginner's Guide to Markdown Syntax","uri":"/en/post/2024/a-beginners-guide-to-markdown-syntax/"},{"content":"Understanding Markdown: A Beginner’s Guide What is Markdown? Markdown is a simple way to format text that looks great on any device. Think of it as a simplified version of HTML or a smarter way to write for the web.\nWhy Use Markdown? Simplicity\nEasy to learn Quick to write Clean to read Portability\nWorks everywhere Converts to HTML Future-proof format Versatility\nBlogs Documentation Notes README files Technical writing Basic Markdown Syntax 1. Headers # Heading 1 ## Heading 2 ### Heading 3 Looks like:\nHeading 1 Heading 2 Heading 3 2. Text Styling **Bold text** *Italic text* ~~Strikethrough~~ Looks like:\nBold text Italic text Strikethrough 3. Lists - Bullet point 1 - Bullet point 2 - Sub-bullet - Another sub-bullet 1. Numbered item 1 2. Numbered item 2 Looks like:\nBullet point 1 Bullet point 2 Sub-bullet Another sub-bullet Numbered item 1 Numbered item 2 4. Links and Images [Visit Google](https://www.google.com) ![Alt text for image](image.jpg) 5. Quotes \u003e This is a quote \u003e It can span multiple lines Looks like:\nThis is a quote It can span multiple lines\n6. Code `inline code` ```python # Code block print(\"Hello World\") ## Real-World Examples ### Blog Post Header ```markdown --- title: \"My First Blog Post\" date: 2024-02-10 tags: [\"markdown\", \"tutorial\"] --- # My Amazing Blog Post Welcome to my blog! Here's what we'll cover today... Project Documentation # Project Name ## Installation 1. Clone the repository 2. Run `npm install` 3. Start with `npm start` ## Features - Fast loading - Easy to use - Mobile friendly Where to Use Markdown Blogging Platforms\nHugo Jekyll Ghost WordPress (with plugins) Documentation\nGitHub GitLab Documentation websites Note-Taking\nObsidian Notable Typora Tools for Writing Markdown Online Editors\nStackEdit Dillinger HackMD Desktop Applications\nVisual Studio Code Typora Obsidian Best Practices Keep It Simple\nUse basic formatting when possible Don’t overuse fancy features Maintain readability Be Consistent\nUse the same style for similar elements Follow a standard format Keep spacing uniform Document Structure\nStart with a clear heading Use appropriate heading levels Include a table of contents for longer documents ","description":"A comprehensive guide to understanding Markdown: comparing with traditional word processors, basic syntax, real-world examples, and best practices for beginners.","tags":["markdown","tutorial","hugo","blog"],"title":"Understanding Markdown: A Beginner's Guide","uri":"/en/post/2024/understanding-markdown--a-beginners-guide/"},{"content":"Beginner’s Guide to Using a Hugo Theme Prerequisites Before you begin, ensure you have:\nHugo installed on your system A code editor (like VS Code, Sublime Text, etc.) Basic familiarity with command line operations Step 1: Theme Installation Download the theme from the source Unzip the downloaded file Navigate to the theme folder: cd lightbi-hugo-master Step 2: Project Structure The theme folder should contain these essential directories:\narchetypes/ - Contains default content templates content/ - Where your website content goes layouts/ - Contains theme templates static/ - For static files (images, CSS, JavaScript) config.toml - Main configuration file Step 3: Building Your Site To build your site, run: hugo This command:\nCreates a public/ directory Generates static files from your content Applies the theme styling To preview your site locally: hugo server This command:\nStarts a development server Makes your site available at http://localhost:1313 Enables live reload for real-time changes Step 4: Adding Content Create new content using: hugo new posts/my-first-post.md Edit the generated markdown file in the content/posts directory Step 5: Customization Configure your site by editing config.toml: baseURL = \"https://example.org/\" languageCode = \"en-us\" title = \"My New Hugo Site\" theme = \"lightbi-hugo\" Customize theme parameters according to the theme documentation Common Issues and Solutions If the server doesn’t start:\nCheck if port 1313 is already in use Try using a different port: hugo server -p 1314 If theme isn’t applying:\nVerify theme name in config.toml Ensure theme files are in the correct directory Deployment Tips Always run hugo command before deploying Use the contents of public/ folder for deployment Consider using GitHub Pages or Netlify for hosting Best Practices Keep content organized in appropriate directories Use meaningful names for content files Regularly commit changes if using version control Test locally before deploying Next Steps Explore theme-specific features Learn about Hugo shortcodes Customize templates Add custom CSS/JavaScript Remember to check the theme’s documentation for specific features and customization options available with this particular theme.\n","description":"This guide provides a comprehensive foundation for getting started with your Hugo theme.","tags":["hugo","blog"],"title":"Beginner's Guide to Using a Hugo Theme","uri":"/en/post/2024/beginners-guide-to-using-hugo-theme/"},{"content":"Hosting Your Hugo Website for Free on Netlify What is Netlify? Netlify is like a free hosting service for your website - think of it as a place that makes your website available to everyone on the internet. It’s especially good for static websites (like those built with Hugo) because:\nIt’s completely free for basic use It’s very fast It’s easy to set up It automatically updates your site when you make changes Setting Up Your Site on Netlify Step 1: Prepare Your Configuration Create a file called netlify.toml in your main project folder. This file tells Netlify how to handle your website:\n[build] publish = \"public\" # This tells Netlify where your finished website files are command = \"hugo --gc --minify\" # This tells Netlify to use Hugo to build your site # Settings for your main website [context.production.environment] HUGO_VERSION = \"0.82.0\" # Specifies which version of Hugo to use HUGO_ENV = \"production\" # Tells Hugo this is for your live website HUGO_ENABLEGITINFO = \"true\" # Allows Hugo to use Git information # Settings for different deployment scenarios [context.split1] command = \"hugo --gc --minify --enableGitInfo\" [context.split1.environment] HUGO_VERSION = \"0.82.0\" HUGO_ENV = \"production\" # Settings for preview deployments (when you want to test changes) [context.deploy-preview] command = \"hugo --gc --minify --buildFuture -b $DEPLOY_PRIME_URL\" [context.deploy-preview.environment] HUGO_VERSION = \"0.82.0\" # Settings for branch deployments [context.branch-deploy] command = \"hugo -b $DEPLOY_PRIME_URL\" [context.branch-deploy.environment] HUGO_VERSION = \"0.82.0\" [context.next.environment] HUGO_ENABLEGITINFO = \"true\" Step 2: Choose Your Deployment Method You have two ways to get your website onto Netlify:\nOption 1: Direct Upload Build your Hugo site locally (run hugo command) Go to Netlify’s website Sign up or log in Drag and drop your public folder onto Netlify’s dashboard Your site is live! Option 2: GitHub Integration (Recommended) Put your Hugo site on GitHub Log in to Netlify Click “New site from Git” Choose GitHub and select your repository Netlify will automatically: Build your site whenever you update GitHub Deploy your changes Handle all the technical details Step 3: Custom Domain (Optional) Netlify gives you a free domain like your-site-name.netlify.app You can add your own custom domain through Netlify’s settings Netlify even provides free HTTPS certificates Tips for Success Always test your site locally before pushing to GitHub Make sure your Hugo version in netlify.toml matches the version you use locally Keep your public folder in your .gitignore file if using GitHub Use Netlify’s deploy previews to check changes before they go live Common Issues and Solutions Build Fails\nCheck your Hugo version matches netlify.toml Make sure all your theme files are included Images Not Showing\nCheck your image paths are correct Make sure images are in the static folder Deployment Stuck\nCheck your repository permissions Verify your build settings in netlify.toml Need help? Check Netlify’s documentation or their community forums for support!\n","description":"Let me explain this guide for hosting a website on Netlify in simpler terms:","tags":["markdown","tutorial","hugo","blog"],"title":"Host a Static Website for Free on Netlify","uri":"/en/post/2024/host-a-static-website-for-free-on-netlify/"},{"content":"Hugo 博客搭建入门指南 什么是 Hugo？ Hugo 是一个快速、现代的静态网站生成器，用 Go 语言编写。它的主要优势包括：\n速度快：生成网站速度极快 部署简单：可以部署在任何地方 GitHub Pages Amazon S3 Netlify Vercel 等 无依赖：不需要数据库 零运维：不需要服务器维护 为什么选择 Hugo？ 简单性\n安装便捷 配置直观 内容管理简单 高性能\n页面加载迅速 构建速度快 资源占用少 灵活性\n支持多种主题 可自定义程度高 Markdown 写作 Windows 系统安装步骤 安装 Hugo\n# 方法一：使用 Chocolatey 包管理器 choco install hugo -confirm # 方法二：使用 Scoop scoop install hugo 或者直接从 Hugo Releases 下载可执行文件\n验证安装\nhugo version 创建新博客 创建网站\n# 创建新网站 hugo new site my-blog cd my-blog 添加主题\n# 添加主题（以 lightbi 为例） git init git submodule add https://github.com/作者/主题仓库.git themes/lightbi 配置网站\n# 编辑 config.toml baseURL = \"https://example.org/\" languageCode = \"zh-cn\" title = \"我的博客\" theme = \"lightbi\" 创建第一篇文章\nhugo new posts/my-first-post.md 本地预览 启动服务器\nhugo server -D 访问网站\n打开浏览器 访问 http://localhost:1313 写作工作流程 创建新文章\nhugo new posts/新文章.md 编辑文章\n使用任何文本编辑器 使用 Markdown 格式 添加元数据（标题、日期、标签等） 预览更改\n保持 hugo server 运行 实时查看更改 部署博客 生成静态文件\nhugo 部署选项\nGitHub Pages Netlify Vercel 任何静态托管服务 最佳实践 内容组织\n使用有意义的目录结构 合理组织文章分类 适当使用标签系统 图片管理\n将图片存放在 static/images 目录 使用有意义的文件名 优化图片大小 版本控制\n使用 Git 管理内容 定期备份 记录重要更改 进阶技巧 自定义主题 添加评论系统 集成分析工具 优化 SEO ","description":"让我为初学者详细解释如何搭建一个 Hugo 博客。这份指南涵盖了从安装到部署的完整流程","tags":["hugo"],"title":"Hugo 博客搭建入门指南","uri":"/en/post/2024/hugo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97/"},{"content":" Introduction As a beginner to Hugo, one of the first things you’ll want to do is create a custom theme for your blog. A custom theme allows you to personalize the look and feel of your website, making it unique and reflective of your brand.\nIn this tutorial, we’ll guide you through the process of setting up a custom theme for your Hugo blog.\nStep 1: Create a New Theme Open your terminal or command prompt and navigate to your Hugo project directory. Run the following command to create a new theme: ","description":"Copy","tags":["markdown","tutorial","hugo","blog"],"title":"Youtube Test Copy","uri":"/en/post/2024/youtube-test-copy/"},{"content":"在 Netlify 上免费托管您的 Hugo 网站 什么是 Netlify？ Netlify 是一个免费的网站托管服务 - 可以将其视为让所有人都能在互联网上访问您网站的平台。它特别适合静态网站（如使用 Hugo 构建的网站），因为：\n基础使用完全免费 速度非常快 设置简单 当您进行更改时自动更新网站 在 Netlify 上设置您的网站 第一步：准备配置 在项目主文件夹中创建一个名为 netlify.toml 的文件。此文件告诉 Netlify 如何处理您的网站：\n[build] publish = \"public\" # 告诉 Netlify 您的完成网站文件在哪里 command = \"hugo --gc --minify\" # 告诉 Netlify 使用 Hugo 构建您的网站 # 主网站的设置 [context.production.environment] HUGO_VERSION = \"0.82.0\" # 指定使用的 Hugo 版本 HUGO_ENV = \"production\" # 告诉 Hugo 这是用于您的正式网站 HUGO_ENABLEGITINFO = \"true\" # 允许 Hugo 使用 Git 信息 # 不同部署场景的设置 [context.split1] command = \"hugo --gc --minify --enableGitInfo\" [context.split1.environment] HUGO_VERSION = \"0.82.0\" HUGO_ENV = \"production\" # 预览部署的设置（当您想测试更改时） [context.deploy-preview] command = \"hugo --gc --minify --buildFuture -b $DEPLOY_PRIME_URL\" [context.deploy-preview.environment] HUGO_VERSION = \"0.82.0\" # 分支部署的设置 [context.branch-deploy] command = \"hugo -b $DEPLOY_PRIME_URL\" [context.branch-deploy.environment] HUGO_VERSION = \"0.82.0\" [context.next.environment] HUGO_ENABLEGITINFO = \"true\" 第二步：选择部署方式 您有两种方式将网站部署到 Netlify：\n方式一：直接上传 在本地构建 Hugo 站点（运行 hugo 命令） 访问 Netlify 网站 注册或登录 将 public 文件夹拖放到 Netlify 的仪表板 您的网站就上线了！ 方式二：GitHub 集成（推荐） 将您的 Hugo 站点放在 GitHub 上 登录 Netlify 点击\"New site from Git\" 选择 GitHub 并选择您的仓库 Netlify 将自动： 在您更新 GitHub 时构建您的网站 部署您的更改 处理所有技术细节 第三步：自定义域名（可选） Netlify 提供免费域名，如 your-site-name.netlify.app 您可以通过 Netlify 的设置添加自己的自定义域名 Netlify 甚至提供免费的 HTTPS 证书 成功提示 在推送到 GitHub 之前始终在本地测试您的网站 确保 netlify.toml 中的 Hugo 版本与您本地使用的版本匹配 如果使用 GitHub，请将 public 文件夹放在 .gitignore 文件中 使用 Netlify 的部署预览来检查更改是否生效 常见问题及解决方案 构建失败\n检查您的 Hugo 版本是否与 netlify.toml 匹配 确保包含所有主题文件 图片不显示\n检查图片路径是否正确 确保图片在 static 文件夹中 部署停滞\n检查您的仓库权限 验证 netlify.toml 中的构建设置 需要帮助？查看 Netlify 的文档或他们的社区论坛寻求支持！\n","description":"This guide should help you get started with hosting your Hugo site on Netlify. Would you like me to explain any part in more detail?","tags":["markdown","tutorial","hugo","blog"],"title":"在 Netlify 上免费托管您的 Hugo 网站","uri":"/en/post/2024/%E5%9C%A8-netlify-%E4%B8%8A%E5%85%8D%E8%B4%B9%E6%89%98%E7%AE%A1%E6%82%A8%E7%9A%84-hugo-%E7%BD%91%E7%AB%99/"},{"content":"Markdown 入门指南：给初学者的详细说明 什么是 Markdown？ Markdown 是一种轻量级的文本格式化工具，它让你能够用简单的符号来美化文本。想象一下，它就像是一个更简单的 Word，但是用的是特殊符号而不是按钮来排版。\n为什么要用 Markdown？ 简单易学\n只需要记住几个符号 不需要复杂的软件 写作过程不被打断 通用性强\n可以转换成网页 可以转换成 PDF 几乎所有平台都支持 实用场景广\n写博客 做笔记 写文档 写说明书 基础语法示例 1. 标题的写法 # 一级标题 ## 二级标题 ### 三级标题 效果如下：\n一级标题 二级标题 三级标题 2. 文字样式 **粗体文字** *斜体文字* ~~删除线~~ 效果如下：\n粗体文字 斜体文字 删除线 3. 列表 - 苹果 - 香蕉 - 小香蕉 - 大香蕉 1. 第一步 2. 第二步 效果如下：\n苹果 香蕉 小香蕉 大香蕉 第一步 第二步 Markdown vs Word Microsoft Word 的特点： 所见即所得（WYSIWYG） 点击按钮立即看到效果 像画画一样排版 需要鼠标操作 Markdown 的特点： 用符号标记格式 使用简单符号标记 专注于内容 键盘即可完成 实际应用场景 写博客\n--- 标题: \"我的第一篇博客\" 日期: 2024-02-10 标签: [\"markdown\", \"教程\"] --- # 博客正文 这是我的第一篇博客... 做笔记\n## 今日笔记 1. 重要事项 - [ ] 完成作业 - [x] 复习课程 常用工具推荐 在线编辑器\n简书 知乎 GitHub 桌面软件\nTypora VS Code Obsidian 入门建议 循序渐进\n先学习基础语法 从简单的笔记开始 慢慢尝试高级功能 实践为主\n每天都用 做好笔记 多写多练 善用参考\n保存语法手册 查看他人文档 使用在线工具 常见问题解答 为什么要学 Markdown？\n提高写作效率 格式统一美观 跨平台使用 如何开始学习？\n从基本语法入手 选择一个编辑器 每天练习使用 在哪里可以使用？\n技术文档 个人笔记 博客写作 项目说明 ","description":"让我用通俗易懂的方式为初学者解释 Markdown。通过以上内容，您现在应该对 Markdown 有了基本认识。想要深入了解哪个部分？我可以详细解释：","tags":["markdown","tutorial","hugo","blog"],"title":"Markdown 入门指南：给初学者的详细说明","uri":"/en/post/2024/markdown-%E5%85%A5%E9%97%A8%E6%8C%87%E5%8D%97%E7%BB%99%E5%88%9D%E5%AD%A6%E8%80%85%E7%9A%84%E8%AF%A6%E7%BB%86%E8%AF%B4%E6%98%8E/"},{"content":"Articles about learn in public, brag document and free stuffs.\nLearn In Public If there’s a golden rule, it’s this one, so I put it first. All the other rules are more or less elaborations of this rule #1.\nA habit of creating learning exhaust:\nWrite blogs and tutorials and cheatsheets. Speak at meetups and conferences. Ask and answer things on Stackoverflow or Reddit. Avoid the walled gardens like Slack and Discord, they’re not public. Make Youtube videos or Twitch streams. Start a newsletter. Draw cartoons. Link Make Free Stuff The best growth hack is still to build something people enjoy, then attaching no strings to it. You’d be surprised how far that can get you.\nMake free stuff! The web is still for everyone.\nLink\nHow to hone your new superpower: teaching I learned early in my developer journey that teaching others is an effective way to quickly deepen my understanding of a new concept or technology. I’ve found that needing to articulate a particular concept to others causes me to revisit my assumptions and leads me to do additional research to fill any knowledge gaps.\nLink\nYour future self will thank you: Building your personal documentation. Developers can take a DRY approach to how they search for answers to questions they encounter multiple times. By relying on an internal database (or “second brain”) they can reduce their reliance on external search engines.\nLink\nBrag now, remember later: Document your accomplishments Given five minutes notice to summarize your recent professional and personal accomplishments and wins, how detailed would your response be? Would that be enough time for you to sufficiently capture some of the things you’re most proud of from the past few months or years?\nLink\nThe most successful developers share more than they take One of the questions I always ask successful bloggers is: what motivated you to start? The answer is always the same: I did it for myself. Whatever your work, you should embrace the philosophy of “public by default”.\nPublic-by-default means this: everytime you create something, learn something, or just notice something’s interesting, do it in public. This may seem daunting—writing blog posts, helping the community and transforming ideas from thoughts into words all takes time. But sharing is like a muscle, and by committing to a regular schedule, you become much more efficient. This consistency of volume is also key to reaping the benefits of sharing.\nTo truly embrace public-by-default, it’s not enough to share your successful projects and knowledge, but additionally to bring the humility to share your learning and failures.\nLink\n","description":"Articles about learning in public, brag document and free stuffs.","tags":["newsletter"],"title":"Collections No.1","uri":"/en/collections/2023/collections/"},{"content":"Articles about learn in public, brag document and free stuffs.\nLearn In Public If there’s a golden rule, it’s this one, so I put it first. All the other rules are more or less elaborations of this rule #1.\nA habit of creating learning exhaust:\nWrite blogs and tutorials and cheatsheets. Speak at meetups and conferences. Ask and answer things on Stackoverflow or Reddit. Avoid the walled gardens like Slack and Discord, they’re not public. Make Youtube videos or Twitch streams. Start a newsletter. Draw cartoons. Link Make Free Stuff The best growth hack is still to build something people enjoy, then attaching no strings to it. You’d be surprised how far that can get you.\nMake free stuff! The web is still for everyone.\nLink\nHow to hone your new superpower: teaching I learned early in my developer journey that teaching others is an effective way to quickly deepen my understanding of a new concept or technology. I’ve found that needing to articulate a particular concept to others causes me to revisit my assumptions and leads me to do additional research to fill any knowledge gaps.\nLink\nYour future self will thank you: Building your personal documentation. Developers can take a DRY approach to how they search for answers to questions they encounter multiple times. By relying on an internal database (or “second brain”) they can reduce their reliance on external search engines.\nLink\nBrag now, remember later: Document your accomplishments Given five minutes notice to summarize your recent professional and personal accomplishments and wins, how detailed would your response be? Would that be enough time for you to sufficiently capture some of the things you’re most proud of from the past few months or years?\nLink\nThe most successful developers share more than they take One of the questions I always ask successful bloggers is: what motivated you to start? The answer is always the same: I did it for myself. Whatever your work, you should embrace the philosophy of “public by default”.\nPublic-by-default means this: everytime you create something, learn something, or just notice something’s interesting, do it in public. This may seem daunting—writing blog posts, helping the community and transforming ideas from thoughts into words all takes time. But sharing is like a muscle, and by committing to a regular schedule, you become much more efficient. This consistency of volume is also key to reaping the benefits of sharing.\nTo truly embrace public-by-default, it’s not enough to share your successful projects and knowledge, but additionally to bring the humility to share your learning and failures.\nLink\n","description":"Articles about learning in public, brag document and free stuffs.","tags":["newsletter"],"title":"Collections No.2","uri":"/en/collections/2023/collections2/"},{"content":"Articles about learn in public, brag document and free stuffs.\nLearn In Public If there’s a golden rule, it’s this one, so I put it first. All the other rules are more or less elaborations of this rule #1.\nA habit of creating learning exhaust:\nWrite blogs and tutorials and cheatsheets. Speak at meetups and conferences. Ask and answer things on Stackoverflow or Reddit. Avoid the walled gardens like Slack and Discord, they’re not public. Make Youtube videos or Twitch streams. Start a newsletter. Draw cartoons. Link Make Free Stuff The best growth hack is still to build something people enjoy, then attaching no strings to it. You’d be surprised how far that can get you.\nMake free stuff! The web is still for everyone.\nLink\nHow to hone your new superpower: teaching I learned early in my developer journey that teaching others is an effective way to quickly deepen my understanding of a new concept or technology. I’ve found that needing to articulate a particular concept to others causes me to revisit my assumptions and leads me to do additional research to fill any knowledge gaps.\nLink\nYour future self will thank you: Building your personal documentation. Developers can take a DRY approach to how they search for answers to questions they encounter multiple times. By relying on an internal database (or “second brain”) they can reduce their reliance on external search engines.\nLink\nBrag now, remember later: Document your accomplishments Given five minutes notice to summarize your recent professional and personal accomplishments and wins, how detailed would your response be? Would that be enough time for you to sufficiently capture some of the things you’re most proud of from the past few months or years?\nLink\nThe most successful developers share more than they take One of the questions I always ask successful bloggers is: what motivated you to start? The answer is always the same: I did it for myself. Whatever your work, you should embrace the philosophy of “public by default”.\nPublic-by-default means this: everytime you create something, learn something, or just notice something’s interesting, do it in public. This may seem daunting—writing blog posts, helping the community and transforming ideas from thoughts into words all takes time. But sharing is like a muscle, and by committing to a regular schedule, you become much more efficient. This consistency of volume is also key to reaping the benefits of sharing.\nTo truly embrace public-by-default, it’s not enough to share your successful projects and knowledge, but additionally to bring the humility to share your learning and failures.\nLink\n","description":"Articles about learning in public, brag document and free stuffs.","tags":["newsletter"],"title":"Collections No.3","uri":"/en/collections/2023/collections3/"},{"content":"Articles about learn in public, brag document and free stuffs.\nLearn In Public If there’s a golden rule, it’s this one, so I put it first. All the other rules are more or less elaborations of this rule #1.\nA habit of creating learning exhaust:\nWrite blogs and tutorials and cheatsheets. Speak at meetups and conferences. Ask and answer things on Stackoverflow or Reddit. Avoid the walled gardens like Slack and Discord, they’re not public. Make Youtube videos or Twitch streams. Start a newsletter. Draw cartoons. Link Make Free Stuff The best growth hack is still to build something people enjoy, then attaching no strings to it. You’d be surprised how far that can get you.\nMake free stuff! The web is still for everyone.\nLink\nHow to hone your new superpower: teaching I learned early in my developer journey that teaching others is an effective way to quickly deepen my understanding of a new concept or technology. I’ve found that needing to articulate a particular concept to others causes me to revisit my assumptions and leads me to do additional research to fill any knowledge gaps.\nLink\nYour future self will thank you: Building your personal documentation. Developers can take a DRY approach to how they search for answers to questions they encounter multiple times. By relying on an internal database (or “second brain”) they can reduce their reliance on external search engines.\nLink\nBrag now, remember later: Document your accomplishments Given five minutes notice to summarize your recent professional and personal accomplishments and wins, how detailed would your response be? Would that be enough time for you to sufficiently capture some of the things you’re most proud of from the past few months or years?\nLink\nThe most successful developers share more than they take One of the questions I always ask successful bloggers is: what motivated you to start? The answer is always the same: I did it for myself. Whatever your work, you should embrace the philosophy of “public by default”.\nPublic-by-default means this: everytime you create something, learn something, or just notice something’s interesting, do it in public. This may seem daunting—writing blog posts, helping the community and transforming ideas from thoughts into words all takes time. But sharing is like a muscle, and by committing to a regular schedule, you become much more efficient. This consistency of volume is also key to reaping the benefits of sharing.\nTo truly embrace public-by-default, it’s not enough to share your successful projects and knowledge, but additionally to bring the humility to share your learning and failures.\nLink\n","description":"Articles about learning in public, brag document and free stuffs.","tags":["newsletter"],"title":"Collections No.4","uri":"/en/collections/2023/collections4/"},{"content":"Articles about learn in public, brag document and free stuffs.\nLearn In Public If there’s a golden rule, it’s this one, so I put it first. All the other rules are more or less elaborations of this rule #1.\nA habit of creating learning exhaust:\nWrite blogs and tutorials and cheatsheets. Speak at meetups and conferences. Ask and answer things on Stackoverflow or Reddit. Avoid the walled gardens like Slack and Discord, they’re not public. Make Youtube videos or Twitch streams. Start a newsletter. Draw cartoons. Link Make Free Stuff The best growth hack is still to build something people enjoy, then attaching no strings to it. You’d be surprised how far that can get you.\nMake free stuff! The web is still for everyone.\nLink\nHow to hone your new superpower: teaching I learned early in my developer journey that teaching others is an effective way to quickly deepen my understanding of a new concept or technology. I’ve found that needing to articulate a particular concept to others causes me to revisit my assumptions and leads me to do additional research to fill any knowledge gaps.\nLink\nYour future self will thank you: Building your personal documentation. Developers can take a DRY approach to how they search for answers to questions they encounter multiple times. By relying on an internal database (or “second brain”) they can reduce their reliance on external search engines.\nLink\nBrag now, remember later: Document your accomplishments Given five minutes notice to summarize your recent professional and personal accomplishments and wins, how detailed would your response be? Would that be enough time for you to sufficiently capture some of the things you’re most proud of from the past few months or years?\nLink\nThe most successful developers share more than they take One of the questions I always ask successful bloggers is: what motivated you to start? The answer is always the same: I did it for myself. Whatever your work, you should embrace the philosophy of “public by default”.\nPublic-by-default means this: everytime you create something, learn something, or just notice something’s interesting, do it in public. This may seem daunting—writing blog posts, helping the community and transforming ideas from thoughts into words all takes time. But sharing is like a muscle, and by committing to a regular schedule, you become much more efficient. This consistency of volume is also key to reaping the benefits of sharing.\nTo truly embrace public-by-default, it’s not enough to share your successful projects and knowledge, but additionally to bring the humility to share your learning and failures.\nLink\n","description":"Articles about learning in public, brag document and free stuffs.","tags":["newsletter"],"title":"Collections No.5","uri":"/en/collections/2023/collections5/"},{"content":"Articles about learn in public, brag document and free stuffs.\nLearn In Public If there’s a golden rule, it’s this one, so I put it first. All the other rules are more or less elaborations of this rule #1.\nA habit of creating learning exhaust:\nWrite blogs and tutorials and cheatsheets. Speak at meetups and conferences. Ask and answer things on Stackoverflow or Reddit. Avoid the walled gardens like Slack and Discord, they’re not public. Make Youtube videos or Twitch streams. Start a newsletter. Draw cartoons. Link Make Free Stuff The best growth hack is still to build something people enjoy, then attaching no strings to it. You’d be surprised how far that can get you.\nMake free stuff! The web is still for everyone.\nLink\nHow to hone your new superpower: teaching I learned early in my developer journey that teaching others is an effective way to quickly deepen my understanding of a new concept or technology. I’ve found that needing to articulate a particular concept to others causes me to revisit my assumptions and leads me to do additional research to fill any knowledge gaps.\nLink\nYour future self will thank you: Building your personal documentation. Developers can take a DRY approach to how they search for answers to questions they encounter multiple times. By relying on an internal database (or “second brain”) they can reduce their reliance on external search engines.\nLink\nBrag now, remember later: Document your accomplishments Given five minutes notice to summarize your recent professional and personal accomplishments and wins, how detailed would your response be? Would that be enough time for you to sufficiently capture some of the things you’re most proud of from the past few months or years?\nLink\nThe most successful developers share more than they take One of the questions I always ask successful bloggers is: what motivated you to start? The answer is always the same: I did it for myself. Whatever your work, you should embrace the philosophy of “public by default”.\nPublic-by-default means this: everytime you create something, learn something, or just notice something’s interesting, do it in public. This may seem daunting—writing blog posts, helping the community and transforming ideas from thoughts into words all takes time. But sharing is like a muscle, and by committing to a regular schedule, you become much more efficient. This consistency of volume is also key to reaping the benefits of sharing.\nTo truly embrace public-by-default, it’s not enough to share your successful projects and knowledge, but additionally to bring the humility to share your learning and failures.\nLink\n","description":"Articles about learning in public, brag document and free stuffs.","tags":["newsletter"],"title":"Collections No.6","uri":"/en/collections/2023/collections6/"},{"content":"After downloading the theme, unzip the file and go to the ’lightbi-hugo-master’ folder. Open the folder in you editor and run the hugo build command as below.\nhugo It will create a folder named ‘public’ and in the same you can find the website created by Hugo from the contents from ‘content’ folder and the theme. To check the website you can run the below command,\nhugo server In the command prompt you can see that your website has started to build and it will normally available at ‘http://localhost:1313/’.\n","description":"After downloading the theme, unzip the file and go to the'lightbi-hugo-master' folder. Open the folder in you editor...","tags":["hugo","blog"],"title":"How to use this Hugo theme ?","uri":"/en/post/2020/jan/use-this-theme/"},{"content":"Hugo? It’s a fast and static website generator written in the Go language. Websites built with Hugo can be hosted anywhere from GitHub Pages to Amazon S3 without any database or other language dependencies.\nFirst I started to use Hugo is for my Malayalam write up a blog wizbi tales (Malayalam is a language spoken in Kerala, India), After the initial learning curves, I loved it for simplicity and performance. And when I started this blog itself I didn’t think twice.\nOkay, Now let’s start. the below section shows how to install Hugo in Windows and develop a blog in it.\nIf you want to know hwo to instal hugo and make a blog in it click here.\n","description":"It’s a fast and static website generator written in the Go language. Websites built with Hugo can be hosted anywhere from GitHub...","tags":["hugo","blog"],"title":"Build a Hugo Blog","uri":"/en/post/2020/jan/build-hugo-blog/"},{"content":"Journaling is not just a little thing you do to pass the time, to write down your memories—though it can be—it’s a strategy that has helped brilliant, powerful and wise people become better at what they do.\n","title":"Note 1","uri":"/en/notes/2020/change/"},{"content":"Journaling is not just a little thing you do to pass the time, to write down your memories—though it can be—it’s a strategy that has helped brilliant, powerful and wise people become better at what they do.\n","title":"Note 2","uri":"/en/notes/2020/change2/"},{"content":"Journaling is not just a little thing you do to pass the time, to write down your memories—though it can be—it’s a strategy that has helped brilliant, powerful and wise people become better at what they do.\n","title":"Note 3","uri":"/en/notes/2020/change3/"},{"content":"What is Markdown?\nThe Markdown Guide is a free and open-source reference guide that explains how to use Markdown, the simple and easy-to-use markup language you can use to format virtually any document.\nMarkdown is a lightweight markup language that you can use to add formatting elements to plaintext text documents. Created by John Gruber in 2004, Markdown is now one of the world’s most popular markup languages.\nUsing Markdown is different than using a WYSIWYG editor. In an application like Microsoft Word, you click buttons to format words and phrases, and the changes are visible immediately. Markdown isn’t like that. When you create a Markdown-formatted file, you add Markdown syntax to the text to indicate which words and phrases should look different.\n","description":"The Markdown Guide is a free and open-source reference guide that explains how to use Markdown, the simple and easy-to-use...","tags":["markdown"],"title":"What is Markdown ?","uri":"/en/post/2020/jan/markdown/"},{"content":"Headings\nTo create a heading, add number signs (#) in front of a word or phrase. The number of number signs you use should correspond to the heading level. For example, to create a heading level three (h3), use three number signs (e.g., ### My Header). Heading level 1 Heading level 2 Heading level 3 Heading level 4 Heading level 5 Heading level 6 Paragraphs\nTo create paragraphs, use a blank line to separate one or more lines of text.\nMarkdown\nI really like using Markdown.\nI think I’ll use it to format all of my documents from now on.\nBold\nTo bold text, add two asterisks or underscores before and after a word or phrase. To bold the middle of a word for emphasis, add two asterisks without spaces around the letters.\nItalic\nTo italicize text, add one asterisk or underscore before and after a word or phrase. To italicize the middle of a word for emphasis, add one asterisk without spaces around the letters.\nItalicized text is the cat’s meow.\nImages\nTo add an image, add an exclamation mark (!), followed by alt text in brackets, and the path or URL to the image asset in parentheses. You can optionally add a title after the URL in the parentheses.\nTo view more about basic syntaxs, click here.\n","description":"To create a heading, add number signs (#) in front of a word or phrase. The number of number signs you use should correspond...","tags":["markdown","syntax"],"title":"Basic Syntax","uri":"/en/post/2020/jan/syntax/"},{"content":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.\nYouTube privacy enhanced shortcode The youtube shortcode embeds a responsive video player for YouTube videos. Only the ID of the video is required, e.g.:\nYouTube URL:\nhttps://www.youtube.com/watch?v=3qHkcs3kG44 Shortcode:\n{{\u003c youtube 3qHkcs3kG44 \u003e}} Rendered output: Twitter You want to include a single tweet into your blog post? Everything you need is the URL of the tweet:\nTwitter url:\nhttps://twitter.com/binovarghese_/status/1758148486510317907 Shortcode:\n{{\u003c twitter user=\"binovarghese_\" id=\"1758148486510317907\" \u003e}} Rendered: I’m a night owl who loves the dark hours. I often go for walks at night, enjoying the city lights, the yellow glow, and the people around me.\nHere are some photos I took from the night walks in Bahrain#photography #Bahrainhttps://t.co/OzoJjNRH67\n— Bino⚡ (@binovarghese_) February 15, 2024 ","description":"Hugo ships with several Built-in Shortcodes for rich content, along with a Privacy Config and a set of Simple Shortcodes that enable.","tags":["hugo","shortcodes"],"title":"Rich Content","uri":"/en/post/2020/jan/rich-content/"},{"content":"You can host your static website wth zero cost in Netlify.\nAdd the below netlify.toml in the root folder.\n[build] publish = \"public\" command = \"hugo --gc --minify\" [context.production.environment] HUGO_VERSION = \"0.82.0\" HUGO_ENV = \"production\" HUGO_ENABLEGITINFO = \"true\" [context.split1] command = \"hugo --gc --minify --enableGitInfo\" [context.split1.environment] HUGO_VERSION = \"0.82.0\" HUGO_ENV = \"production\" [context.deploy-preview] command = \"hugo --gc --minify --buildFuture -b $DEPLOY_PRIME_URL\" [context.deploy-preview.environment] HUGO_VERSION = \"0.82.0\" [context.branch-deploy] command = \"hugo -b $DEPLOY_PRIME_URL\" [context.branch-deploy.environment] HUGO_VERSION = \"0.82.0\" [context.next.environment] HUGO_ENABLEGITINFO = \"true\" And you can upload the public folder directly to Netlify or integrate your GitHub accout with Netlify to host your website.\n","description":"You can host your static website wth zero cost in Netlify. Add the below netlify.toml in the root. And you can upload the public folder directly...","tags":["hugo","Netlify"],"title":"Host in Netlify","uri":"/en/post/2020/jan/netlify-conf/"},{"content":"Who am I ?! This is the most asked question in my life. Yet no clear answer has yet been found.\nAs a child, the answer to this question was simple. Say my name to the question of who. Aha ..! Simple and beautiful. In that answer, parents and siblings in adolescence. I thought to myself that the answer was too clear.\nWhen I started asking myself this question at a young age when I was beginning to recognize many things, I began to feel that the answer was becoming less clear. Who am I ?! If you ask me who I am. Anyone else. Still no answer to the question. Who am I?\nSeek, that is the way to find the answer. Knock, and it shall be opened unto you !! The investigation has begun.\nThere is no doubt where to start. From me. I began to search the bottom of my heart in the silence. From there the search went on to the printed books. Couldn’t figure it out from there. No suitable gurus could be found to answer this question.\nThe search continued, and the only sound in my heart was to go ahead. The answer is nowhere to be found. So I’m still looking around, and the answer to my question is hidden somewhere.\nI do not know, some questions take time to answer. The meaning of a single word question is getting bigger and bigger. Who am I ?! What is my identity ?! What are my missions ?! Can I know the light of the answers ?!\nThose who ask the same questions go up the steps of consciousness and seem to be enlightened and insane. What will I become at the end of this question? !! Buddha or mad !! Anyone should have a small smile left at the end. The smile of recognition.\nWho am I, let the question continue.\n","description":"Who am I ?! This is the most asked question in my life. Yet no clear answer...","tags":["stoicism"],"title":"Who am I ?!","uri":"/en/post/2020/jan/who-am-i/"}]
